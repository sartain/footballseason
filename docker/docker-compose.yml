#
# Copyright 2015-2020 The OpenZipkin Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

# This file uses the version 2 docker-compose file format, described here:
# https://docs.docker.com/compose/compose-file/#version-2
#
# This runs the zipkin slim container, using docker-compose's default networking
# to wire other containers together.
#
# Note that this file is meant for learning Zipkin, not production deployments.

version: '2.4'

services:
  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to.
  zipkin:
    image: openzipkin/zipkin-slim:2.24
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    # Uncomment to enable debug logging
    # command: --logging.level.zipkin2=DEBUG

  prometheus:
    # Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas
    # Use latest from https://quay.io/repository/prometheus/prometheus?tab=tags
    image: prom/prometheus:v2.41.0
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - zipkin
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    # Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas
    # Use latest from https://quay.io/repository/app-sre/grafana?tab=tags
    image: grafana/grafana:9.3.2
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  setup_grafana_datasource:
    # This is an arbitrary small image that has curl installed
    # Use a quay.io mirror to prevent build outages due to Docker Hub pull quotas
    # Use latest from https://quay.io/repository/quay.io/rackspace/curl?tab=tags
    image: curlimages/curl:latest
    container_name: setup_grafana_datasource
    depends_on:
      - grafana
    volumes:
      - ./prometheus/create-datasource-and-dashboard.sh:/tmp/create.sh:ro
    working_dir: /tmp
    entrypoint: /tmp/create.sh
